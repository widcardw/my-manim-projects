在前几期视频中,我们大致介绍了如何使用updater制作稍微进阶一些的视频效果
这期视频我们来做一些总结,顺便给出一些使用例,可以供大家尝试模仿
当然,先在此声明一下,up的能力有限,对于python的理解和掌握也不一定比在座的观众好,
而且这个库的灵活性非常高,我也相信大家能做出更为出色的动画效果

首先,在manim中,我们所看到的这些图像,
大多是用贝塞尔曲线拟合出矢量图,然后再插入到场景中的,
在之前的视频中,我也给出了一些方式将锚点的位置都显示出来,
这里再给大家呈现一下

而这些锚点在manim中都是使用numpy的ndarray来进行存储和操作的,
如果大家有兴趣的话可以使用print,将这些坐标,或者说是数组打印出来
当然,我们可以对物件的锚点进行操作,来给物件做一些自定义的变化
例如使用ApplyFunction等方法,给物件进行变换,
这里的话我也不太清楚到底应该怎么写,导致现在这个东西看上去很怪异,也很繁琐
大家可以参考manimlib/example_scene里面
第一个场景,写出类似这样的效果,而且能稍微简单一些
至于其原理,有兴趣的可以自己进行研究

接下来是与target有关的方面,大家可以参考一下Transform和mobject,
这里面包含了一些对于target的一些解释,
由于我自己理解的也并不是很透彻,也只能给大家稍微陈述一下我自己的想法
大致就是给物件创建一个目标,接着通过一些方法来使物件变成目标的样式
最终呈现给我们的,就是每一帧图像拼接成的一段视频

接下来就正式进入updater,用上面的方式来理解的话,那就是每一帧都计算出物件下一帧的状态,
然后再将这个物件进行转变
关于ValueTracker,我们经常会用updater将物件与这个存值器绑定起来,
最后在play的过程中,只需要设置存值器内的值,与它绑定的物件就会随之一起运动

关于含时间的变化,更新函数中传入dt之后,整个场景就类似于进入了一种基于时间流逝而变化的状态
因此,不管是在play还是wait的过程中,这些物件都会进行更新和变化
另外,在dt的使用过程中,我们有时候也会遇到一些问题,例如一些方法中
在动画的开头会直接跑到第二帧的位置,导致整个动画提前了两帧
这应该算是一个bug,对于我来说也很难搞清它的具体原因
在贝多芬的教程中,ta给出了一种解决方案,我会在视频中放上av号,大家可以去研究研究

然后是关于UpdateFromFunc,alpha以及涉及一些save_state和restore的操作
alpha的话经常与point_from_proportion这个方法一起使用,
让物件沿着一条路径进行运动
当然也可以把alpha当做一个受限制的ValueTracker使用,
结合UpdateFromAlphaFunc,让动画呈现出alpha从0播放到1的过程

最后就给大家呈现一些使用例,作为一些参考吧
第一个例子,是关于ValueTracker和add_updater的一些基本使用
我们通过改变ValueTracker的值来改变圆弧的半径和圆心角

第二到第三个,是幼儿园包络线的例子,这里我采用UpdateFromAlphaFunc和dt来进行演示
首先是抛物线,建立好准线和焦点,然后画出连线和中垂线
在动画函数中写好更新,设置一下包络线的密度
用UpdateFromAlphaFunc进行演示

最后是追逐曲线,由于难以控制它的开头和结束,所以我们采用dt的方式
由于三角形的话要设置不少坐标,在这里我就直接使用正方形了
在更新函数中传入dt,最后wait一段时间,就可以输出动画了

对于这种对帧率误差没有太高要求的,也可以使用UpdateFromFunc,
也可以达到这样类似的效果

本期视频大致就是这样,如果大家有什么意见或者建议,可以在弹幕或者评论中指出
也欢迎大家加入我们manim-kindergarten,相互探讨学习
当然进群的前提是你必须要掌握一些必要编程和数学的知识
感谢大家的收看